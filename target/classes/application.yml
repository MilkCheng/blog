server:
  port: 8888
  tomcat:
    uri-encoding: UTF-8

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/blog?characterEncoding=utf8
    username: miaocheng
    password: 123
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    #用来检测链接是否有效的语句，要求是一个查询语句
    #如果为null，那么以下三个配置都不会起作用
    validationQuery: SELECT 1 FROM DUAL
    #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，
    #如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    testWhileIdle: true
    #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
    testOnBorrow: false
    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false
    # 通过别名的方式配置扩展插件，监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
    filters: stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  thymeleaf:
    mode: LEGACYHTML5
  jpa:
    database: MYSQL
    show-sql: true
  #Hibernate ddl auto (validate|create|create-drop|update)
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5Dialect
  redis:
    #database: 1
        host: localhost
        port: 6379
        pool:
          max-idle: 8
          min-idle: 0
          max-active: 8
          max-wait: -1

#修改默认上传限制 注：spring boot 1.4.之后版本配置有变化
multipart:
  max-file-size: 10Mb
  max-request-size: 100Mb
